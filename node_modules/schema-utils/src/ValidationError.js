/* eslint-disable
<<<<<<< HEAD
  strict
=======
  strict,
  no-param-reassign
>>>>>>> 55277b1ab008d10ef63e5b1af479c1a3e819d9c3
*/

'use strict';

class ValidationError extends Error {
  constructor(errors, name) {
    super();

    this.name = 'ValidationError';

    this.message = `${name || ''} Invalid Options\n\n`;

<<<<<<< HEAD
    errors.forEach((err) => {
      this.message += `options${err.dataPath} ${err.message}\n`;
    });

    this.errors = errors;
=======
    this.errors = errors.map((err) => {
      err.dataPath = err.dataPath.replace(/\//g, '.');

      return err;
    });

    this.errors.forEach((err) => {
      this.message += `options${err.dataPath} ${err.message}\n`;
    });
>>>>>>> 55277b1ab008d10ef63e5b1af479c1a3e819d9c3

    Error.captureStackTrace(this, this.constructor);
  }
}

module.exports = ValidationError;
